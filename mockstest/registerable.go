// Code generated by mockery v1.0.0. DO NOT EDIT.

package mockstest

import common "foreplay/output/common"
import config "foreplay/config"
import context "context"
import mock "github.com/stretchr/testify/mock"

// Registerable is an autogenerated mock type for the Registerable type
type Registerable struct {
	mock.Mock
}

// Register provides a mock function with given fields: ctx, hooks, results
func (_m *Registerable) Register(ctx context.Context, hooks []config.Hook, results <-chan common.Result) chan interface{} {
	ret := _m.Called(ctx, hooks, results)

	var r0 chan interface{}
	if rf, ok := ret.Get(0).(func(context.Context, []config.Hook, <-chan common.Result) chan interface{}); ok {
		r0 = rf(ctx, hooks, results)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan interface{})
		}
	}

	return r0
}
